plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
}

// Config declaration of variable
def releaseVersionCode = 1
def releaseVersionName = "1.0.0"
def stagingVersionName = "1.0.0-stg"
def developmentVersionName = "1.0.0-dev"
def appName = "sabong_guide_v"

android {

    // Uncomment if may keystore na
    /* signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    } */

    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.evansontemplate"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode releaseVersionCode
        versionName releaseVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (variant.buildType.name == 'staging' || variant.buildType.name == 'debugstaging') {
                    output.versionNameOverride = stagingVersionName
                    outputFileName = "$appName${stagingVersionName}.apk"
                } else if (variant.buildType.name == 'development' || variant.buildType.name == 'debugDevelopment') {
                    output.versionNameOverride = developmentVersionName
                    outputFileName = "$appName${developmentVersionName}.apk"
                } else {
                    output.versionNameOverride = releaseVersionName
                    outputFileName = "$appName${releaseVersionName}.apk"
                }
            }
        }
    }

    buildTypes {
        development {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.config // Uncomment if may keystore na

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

        staging {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.config // Uncomment if may keystore na

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.config // Uncomment if may keystore na

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

        debugDevelopment {
            debuggable true
            // signingConfig signingConfigs.debug // Uncomment if may keystore na

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

        debugstaging {
            debuggable true
            // signingConfig signingConfigs.debug // Uncomment if may keystore na

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

        debugprod {
            debuggable true
            signingConfig signingConfigs.debug

            buildConfigField "String", "BASE_URL", '"https://sample.com/"'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    /* lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found10
        abortOnError false
    } */

}

dependencies {
    def koin_version = '2.0.1'
    def multidex_version = '2.0.1'
    def retrofit_version = '2.8.1'
    def splitties_version = '3.0.0-alpha06'
    def secured_prefs_version = '0.1.7'
    def nav_version = "2.3.5"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1' // Dipa sure kung optional. To be tested.
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0' // Dipa sure kung optional. To be tested.

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Code reducer
    implementation "com.louiscad.splitties:splitties-activities:$splitties_version"
    implementation "com.louiscad.splitties:splitties-fragments:$splitties_version"
    implementation "com.louiscad.splitties:splitties-bundle:$splitties_version"
    implementation "com.louiscad.splitties:splitties-toast:$splitties_version"
    implementation "com.louiscad.splitties:splitties-fragmentargs:$splitties_version"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // MultiDex
    implementation "androidx.multidex:multidex:$multidex_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Coroutines for asynchronous calls (and Deferredâ€™s adapter)
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Secured Preferences
    implementation "com.scottyab:secure-preferences-lib:$secured_prefs_version"

    // Material Dialog
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.4.0'

    // Facebook Stetho
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    /*// Logging Interceptor
    implementation ('com.github.ihsanbal:LoggingInterceptor:3.1.0'){
        exclude group: 'org.json', module: 'json'
    } */

    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}